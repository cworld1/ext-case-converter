import { Button, ComboBox, CheckBox } from "std-widgets.slint";

export component SettingsPanel inherits Window {
    preferred-width: 360px;
    preferred-height: 200px;
    title: @tr("Settings");
    icon: @image-url("../assets/favicon.png");

    in-out property <string> language;
    in-out property <bool> default_recursive;
    in-out property <int> selected_language_index: 0;

    VerticalLayout {
        padding: 20px;
        spacing: 20px;

        // 语言设置行
        HorizontalLayout {
            spacing: 8px;
            alignment: space-between;

            Text {
                text: @tr("Language");
                font-size: 14px;
                vertical-alignment: center;
            }

            ComboBox {
                width: 150px;
                model: ["中文", "English"];
                current-index: root.selected_language_index;
                selected(value) => {
                    if value == "中文" {
                        root.language = "zh";
                        root.selected_language_index = 0;
                    } else {
                        root.language = "en";
                        root.selected_language_index = 1;
                    }
                }
            }
        }

        // 默认递归设置行
        HorizontalLayout {
            spacing: 8px;
            alignment: space-between;

            Text {
                text: @tr("Default Recursive Folders");
                font-size: 14px;
                vertical-alignment: center;
            }

            CheckBox {
                checked: root.default_recursive;
                toggled => {
                    root.default_recursive = !root.default_recursive;
                }
            }
        }

        // 占位空间，将按钮推到底部
        Rectangle {
            // 这个空的 Rectangle 会占用剩余空间
        }

        // 底部按钮
        HorizontalLayout {
            height: 32px;
            alignment: end;
            Button {
                text: @tr("OK");
                clicked => {
                    root.close_settings();
                }
            }
        }
    }

    callback close_settings();
}
