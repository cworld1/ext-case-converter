import { Button, Switch, ScrollView } from "std-widgets.slint";

export component AppWindow inherits Window {
    preferred-width: 600px;
    preferred-height: 500px;
    title: @tr("File Extension Case Converter");

    in-out property <[string]> file_list: [];
    in-out property <bool> recursive: false;
    in-out property <bool> dark_mode: false;
    in-out property <string> language: "zh";
    in-out property <float> progress: 0.0;
    in-out property <string> result_text: "";

    callback drop_files(drop_data: string);
    callback convert_case(mode: string);
    callback select_files();
    callback show_settings();
    callback show_about();

    VerticalLayout {
        padding: 16px;
        spacing: 16px;

        // 顶部按钮区
        HorizontalLayout {
            spacing: 8px;
            alignment: space-between;

            HorizontalLayout {
                spacing: 8px;
                Button {
                    text: @tr("Select Files/Folders");
                    clicked => {
                        root.select_files();
                    }
                }

                Switch {
                    text: @tr("Recursive Subdirectories");
                    checked: root.recursive;
                    toggled => {
                        root.recursive = !root.recursive;
                    }
                }
            }

            HorizontalLayout {
                spacing: 8px;
                alignment: end;
                Button {
                    text: @tr("Settings");
                    clicked => {
                        root.show_settings();
                    }
                }

                Button {
                    text: @tr("About");
                    clicked => {
                        root.show_about();
                    }
                }
            }
        }

        // 文件列表区域
        Rectangle {
            border-radius: 6px;
            border-width: 1px;
            border-color: #717171;

            ScrollView {
                width: parent.width;
                height: parent.height;

                VerticalLayout {
                    padding: 8px;
                    spacing: 4px;

                    if root.file_list.length == 0: Rectangle {
                        height: 100px;
                        TouchArea {
                            // 拖拽事件需在 Rust 侧处理
                            Text {
                                text: @tr("Drag and drop files or folders here");
                                font-size: 14px;
                                horizontal-alignment: center;
                                vertical-alignment: center;
                            }
                        }
                    }

                    for file in root.file_list: Rectangle {
                        height: 24px;
                        background: #ffffff37;
                        border-radius: 2px;

                        Text {
                            text: file;
                            font-size: 13px;
                            horizontal-alignment: left;
                            vertical-alignment: center;
                            x: 8px;
                        }
                    }
                }
            }
        }

        // 操作按钮区
        HorizontalLayout {
            height: 40px;
            spacing: 8px;

            Button {
                text: @tr("Convert to Uppercase");
                primary: true;
                clicked => {
                    root.convert_case("upper");
                }
            }

            Button {
                text: @tr("Convert to Lowercase");
                primary: true;
                clicked => {
                    root.convert_case("lower");
                }
            }
        }

        // 进度条区
        Rectangle {
            height: 24px;
            border-radius: 5px;
            border-width: 1px;
            border-color: #717171;
            clip: true;

            Rectangle {
                background: #32ca95;
                width: root.progress * parent.width;
                height: parent.height;
                animate width {
                    duration: 200ms;
                    easing: ease-out;
                }
            }

            Rectangle {
                height: parent.height;
                width: parent.width;
                background: transparent;
                Text {
                    text: floor(root.progress * 100) + "%";
                    color: white;
                    font-size: 12px;
                    font-weight: 700;
                    horizontal-alignment: center;
                    vertical-alignment: center;
                }
            }
        }

        // 结果展示区
        Rectangle {
            border-radius: 5px;
            border-width: 1px;
            border-color: #717171;

            ScrollView {
                width: parent.width;
                height: parent.height;
                viewport-height: self.visible-height;

                Text {
                    padding: 8px;
                    text: root.result_text;
                    wrap: word-wrap;
                    color: #333;
                    font-size: 13px;
                }
            }
        }
    }
}
